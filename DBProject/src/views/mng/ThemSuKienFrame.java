/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.mng;
import models.LenLichSuKien;
import controllers.mng.LenLichSuKienController;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime; 
import java.time.LocalDateTime;
import java.util.Date;

import javax.swing.JOptionPane;
import controllers.user.XemLichSuDungNhaVanHoaController;
import controllers.mng.XemLich;
import javax.swing.JComboBox;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;

import java.time.Instant;
import java.time.ZoneId;


import javax.swing.DefaultComboBoxModel;
//import com.jgoodies.forms.factories.DefaultComponentFactory;
import javax.swing.JTable;
import com.toedter.calendar.JDateChooser;
import javax.swing.SwingConstants;
import java.awt.Font; // mới thêm
public class ThemSuKienFrame extends javax.swing.JFrame {
// thêm
    private String hours[] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"};
    private String minutes[] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24",
        "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51",
        "52", "53", "54", "55", "56", "57", "58", "59"};
    final DefaultComboBoxModel modelHours1 = new DefaultComboBoxModel(hours);
    final DefaultComboBoxModel modelHours2 = new DefaultComboBoxModel(hours);
    final DefaultComboBoxModel modelMinutes1 = new DefaultComboBoxModel(minutes);
    final DefaultComboBoxModel modelMinutes2 = new DefaultComboBoxModel(minutes);

	
    LenLichSuKien lichSuKien;
    /**
     * Creates new form ThemSuKienFrame
     */
    public ThemSuKienFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    private boolean check(){      // thay đổi
         if(jTextFieldTenSk.getText().length() == 0
            || jTextFieldChiPhi.getText().length() == 0 || jDateStart.getDate() == null
            || hourBoxStart.getItemAt(hourBoxStart.getSelectedIndex()).isEmpty() || jDateFinish.getDate() == null
            || hourBoxFinish.getItemAt(hourBoxStart.getSelectedIndex()).isEmpty() || minuteBoxStart.getItemAt(hourBoxStart.getSelectedIndex()).isEmpty()
            || minuteBoxFinish.getItemAt(hourBoxStart.getSelectedIndex()).isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đẩy đủ thông tin", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
                 String startHour = hourBoxStart.getItemAt(hourBoxStart.getSelectedIndex());
        String startMinute = minuteBoxStart.getItemAt(minuteBoxStart.getSelectedIndex());
        LocalDateTime startTime = Instant.ofEpochMilli(jDateStart.getDate().getTime() )
                            .atZone( ZoneId.systemDefault() )
                            .toLocalDateTime();
        startTime.plusHours(Integer.valueOf(startHour));
        startTime.plusMinutes(Integer.valueOf(startMinute));

        String endHour = hourBoxFinish.getItemAt(hourBoxFinish.getSelectedIndex());
        String endMinute = minuteBoxFinish.getItemAt(minuteBoxFinish.getSelectedIndex());
        LocalDateTime endTime = Instant.ofEpochMilli(jDateFinish.getDate().getTime() )
                            .atZone( ZoneId.systemDefault() )
                            .toLocalDateTime();
        endTime.plusHours(Integer.valueOf(endHour));
        endTime.plusMinutes(Integer.valueOf(endMinute));

        if(!XemLich.checkAvailable((String)jComboBox1.getSelectedItem(), startTime, endTime)) {
            JOptionPane.showMessageDialog(null, "Sự kiện trùng với sự kiện khác", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
         
        try{
                int fee = Integer.parseInt(jTextFieldChiPhi.getText());
            } catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Chi phí không hợp lệ", "Warning", JOptionPane.WARNING_MESSAGE);
                return false;
            } 
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTenSk = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldChiPhi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jDateStart = new com.toedter.calendar.JDateChooser();
        jDateFinish = new com.toedter.calendar.JDateChooser();
        hourBoxStart = new javax.swing.JComboBox<>();
        minuteBoxStart = new javax.swing.JComboBox<>();
        hourBoxFinish = new javax.swing.JComboBox<>();
        minuteBoxFinish = new javax.swing.JComboBox<>();
        jLabelTime1_1 = new javax.swing.JLabel();
        jLabelTime2_1 = new javax.swing.JLabel();
        jLabelTime1_2 = new javax.swing.JLabel();
        jLabelTime2_2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextFieldMoTa = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("-Chọn phòng:");

        XemLichSuDungNhaVanHoaController xemLichSuDungNhaVanHoaController = new XemLichSuDungNhaVanHoaController();
        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(xemLichSuDungNhaVanHoaController.layDanhSachPhong()));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("-Tên sự kiện:");

        jTextFieldTenSk.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("-Bắt đầu:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("-Kết thúc:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("-Chi phí:");

        jTextFieldChiPhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldChiPhiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("-Mô tả:");

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setText("Xác nhận");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton2.setText("Hủy");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jDateStart.setToolTipText("");
        jDateStart.setDateFormatString("dd-MM-yyyy");
        jDateStart.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jDateFinish.setDateFormatString("dd-MM-yyyy");

        hourBoxStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        hourBoxStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourBoxStartActionPerformed(evt);
            }
        });

        minuteBoxStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        minuteBoxStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minuteBoxStartActionPerformed(evt);
            }
        });

        hourBoxFinish.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        hourBoxFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourBoxFinishActionPerformed(evt);
            }
        });

        minuteBoxFinish.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        minuteBoxFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minuteBoxFinishActionPerformed(evt);
            }
        });

        jLabelTime1_1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTime1_1.setText("Giờ");

        jLabelTime2_1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTime2_1.setText("Giờ");

        jLabelTime1_2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTime1_2.setText("Phút");

        jLabelTime2_2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTime2_2.setText("Phút");

        jTextFieldMoTa.setColumns(20);
        jTextFieldMoTa.setRows(5);
        jScrollPane1.setViewportView(jTextFieldMoTa);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldChiPhi)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 38, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(51, 51, 51)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173))
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(hourBoxStart, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelTime1_1)
                                .addGap(18, 18, 18)
                                .addComponent(minuteBoxStart, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelTime1_2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(hourBoxFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelTime2_1)
                                .addGap(18, 18, 18)
                                .addComponent(minuteBoxFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelTime2_2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldTenSk)
                    .addComponent(jScrollPane1))
                .addGap(146, 146, 146))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTenSk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hourBoxStart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(minuteBoxStart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelTime1_1)
                        .addComponent(jLabelTime1_2))
                    .addComponent(jDateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateFinish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(minuteBoxFinish, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hourBoxFinish, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(jLabelTime2_1)
                        .addComponent(jLabelTime2_2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldChiPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Date dateStart = jDateStart.getDate();
    	DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    	Date dateFinish = jDateFinish.getDate();
        if(check()){	//thay đổi
            String roomName = (String)jComboBox1.getSelectedItem();
            String startTime = dateFormat.format(dateStart) + " " + hourBoxStart.getSelectedIndex() + ":" + minuteBoxStart.getSelectedIndex() + ":00";
            String finishTime = dateFormat.format(dateFinish) + " " + hourBoxFinish.getSelectedIndex() + ":" + minuteBoxFinish.getSelectedIndex() + ":00";
            String eventName = jTextFieldTenSk.getText();
            String eventDescriptions = jTextFieldMoTa.getText();
            int fee = Integer.parseInt(jTextFieldChiPhi.getText());                   
            LenLichSuKienController.lenLich(new LenLichSuKien(roomName, startTime, finishTime, eventName, eventDescriptions, fee));
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if(jTextFieldTenSk.getText().length() != 0 || jTextFieldMoTa.getText().length() != 0
            || jTextFieldChiPhi.getText().length() != 0){            // thay đổi
            if (JOptionPane.showConfirmDialog(null, "Bạn có muốn hủy?", "WARNING",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                this.dispose();
            } else {                           
            }
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextFieldChiPhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldChiPhiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldChiPhiActionPerformed

    private void hourBoxStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourBoxStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourBoxStartActionPerformed

    private void minuteBoxStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minuteBoxStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minuteBoxStartActionPerformed

    private void hourBoxFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourBoxFinishActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourBoxFinishActionPerformed

    private void minuteBoxFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minuteBoxFinishActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minuteBoxFinishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemSuKienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemSuKienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemSuKienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemSuKienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemSuKienFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> hourBoxFinish;
    private javax.swing.JComboBox<String> hourBoxStart;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateFinish;
    private com.toedter.calendar.JDateChooser jDateStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelTime1_1;
    private javax.swing.JLabel jLabelTime1_2;
    private javax.swing.JLabel jLabelTime2_1;
    private javax.swing.JLabel jLabelTime2_2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldChiPhi;
    private javax.swing.JTextArea jTextFieldMoTa;
    private javax.swing.JTextField jTextFieldTenSk;
    private javax.swing.JComboBox<String> minuteBoxFinish;
    private javax.swing.JComboBox<String> minuteBoxStart;
    // End of variables declaration//GEN-END:variables
}
